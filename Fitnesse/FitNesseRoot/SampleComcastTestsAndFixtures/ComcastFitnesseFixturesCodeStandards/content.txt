!1 Comcast Fitnesse Fixtures Coding Standards

This page outlines the standards that the VBO Test Team has implemented for writing code for Fixture development. 

Please go through the naming convention of Fixture names here : ComcastSampleFixtureWikiStandards

Once we have the proper naming convention of Fixture names (class names in Java), the coding standards are as follows:

'''1. Each class should have Class level comments which will describe in brief about what the class is about. This comment should include author tag which has the author information.'''

eg.:  The comments for !-AddDelay()-! Fixture
/**
 !-*-! This fixture is to add delay in between tests
 !-*-! 
 !-*-! @author kchait001c
 !-*-!
 !-*/-!
public class !-AddDelay-! extends !-ColumnFixture-! {


'''2. Each method in the class should have comments which describes what the method does.'''

eg.: the !-Delay()-! method in !-AddDelay()-! class has the following comments.

/**
 !-*-! This method is used to add delay in execution
 !-*-! 
 !-*-! @param seconds
 !-*-!/
public String !-delay()-! {

'''3. If there are multiple methods, each method should have its own method comments with description.'''

'''4. Exception Handling:
All the exceptions needed to be handled properly in the code. The main aim of doing exception handling is, when the test is run in Wiki, the test has to be either pass(Green) or fail(Red). 
Java code should not return exceptions.'''

eg.: Missing class or Missing method. Possibly:
public Type !-getCommandRunnerColumnFixture()-! { }

or
!-NullPointerException()-!

'''5. Class names, Method names and Variable names used in the Wiki are to be used in the Fixture code also.'''

'''6. Do not forget to extend !-ColumnFixture-!.'''

