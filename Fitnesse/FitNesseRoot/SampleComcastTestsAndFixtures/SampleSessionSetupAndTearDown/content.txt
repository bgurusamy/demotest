!style_blue{'''The Execute Session Setup and Execute Session Teardown fixtures allow you to send an S1 setup request to VCP and return the VCP response code.'''}


!style_red {'''Input Column Descriptions'''}

!style_green{'''request - first string in concatenation'''}
!style_green{'''url - second string in concatenation'''}

!style_red {'''Output Column Descriptions'''}

!style_green {'''Set Up Session - full string that was concatenated"'''} 
!style_green {'''response - contains the VCP response from the session setup'''}
!style_green{'''Teardown Session - includes the fitnesse response from session teardown'''}

!********> Variables
!define serviceName {"VOD"} !style_blue{'''Service Name in NGOD S1 Request'''}
!define clientSessionId {"00001171b021:16FD4557"} !style_blue{'''!-ClientSessionId-! obtained from an STB session'''}
!define localTime {"2015-06-05T01:27:53-53:37"} !style_blue{'''Local Time value in NGOD S1 Request'''}
!define usage {"START"} !style_blue{'''Start value in NGOD S1 Request'''}
!define hostMAC {"00001171b021"} !style_blue{'''hostMAC address of the STB'''}
!define ipAddress {"10.244.90.6"} !style_blue{'''ipAddress is the ip address of the SGS (CGW24 in this case) that has the Peer Group valued used below'''}
!define ipPort {"1585"} !style_blue{'''ipPort is the ip port of the client'''}
!define profile {"A28"} !style_blue{'''profile used in validation of the data in splunk'''}
!define existingRentalWasApplied {"N"} !style_blue{'''existingRentalWasApplied value in NGOD S1 Request'''}
!define timeClientOriginated {"2015-06-05T05:27:53Z"} !style_blue{'''timeClientOriginated value in NGOD S1 Request'''}
!define streamingZone {"3401"} !style_blue{'''streaming zone of the headend'''}
!define QamName {3401.1606} !style_blue{'''!-QamName-! used in streaming'''}
!define type {"PG"} !style_blue{'''locality type is PG in most cases which represents Peer Group'''}
!define value {"65004"} !style_blue{'''locality used in streaming'''}
!define idType {"ATP"} !style_blue{'''content type passed in the NGOD S1 Request - either ATP (Asset Type Paid) or Alias'''}
!define idValue {"indemand.comINTL0412000006726460"} !style_blue{'''paid title for asset used in streaming'''}
!define URL {"http://10.253.206.79:80/"} !style_blue{'''arris URL is the URL of the SGS'''}
!define ODSessionId {}
!define sessionmanagerurl_setup {http://vcpu1srm-dt-vip.ula.comcast.net:8080/sm/SetupSession} !style_blue{'''session setup VIP for the set of SRMs on one stripe side'''}
!define sessionmanagerurl_teardown {http://vcpu1srm-dt-vip.ula.comcast.net:8080/sm/TeardownSession} !style_blue{'''session teardown VIP for the set of SRMs on one stripe side'''}


*************!

!style_blue{'''1. Import package - common to all wiki pages'''}.

|Import          |
|com.comcast.core|
     
!style_blue{'''2. Execute Session Setup by passing in the XML for the S1 Session Setup message.'''}

!|ExecuteSessionSetup|
|request|URL                       |setupSession() |response?|
|<SetupSession xmlns="urn:com:comcast:ngsrm:s1:2010:12:03" serviceName=${serviceName} clientSessionId=${clientSessionId} localTime=${localTime} usage=${usage}><TargetClient hostMAC=${hostMAC} ipAddress=${ipAddress} ipPort=${ipPort} profile=${profile} /><RentalTrace existingRentalWasApplied=${existingRentalWasApplied} timeClientOriginated=${timeClientOriginated} /><DeviceLocation streamingZone=${streamingZone}><QamList><QamName>${QamName}</QamName></QamList><Locality type=${type} value=${value} /></DeviceLocation><ContentId idType=${idType} idValue=${idValue} /><SignalingURL order="1" URL=${URL} /></SetupSession>|${sessionmanagerurl_setup}|Session Created|0        |

!style_blue{'''3. Execute Session Teardown using the session manager url.'''}

!|ExecuteSessionTearDown                                                     |
|URL                          |teardownSession()|
|${sessionmanagerurl_teardown}|Session Torndown|

